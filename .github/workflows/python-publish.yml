# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pytest-cov
        pip install -e .
        pip install pylint
        pip install -r requirements.txt
    - name: Lint
      run: |
        pylint ./tensorboard_wrapper/ --fail-under=9 --ignore-paths=./tensorboard_wrapper/_version.py
    - name: Test
      run: |
        pytest --doctest-modules --junitxml=junit/test-results.xml --cov=tensorboard_wrapper --cov-report=xml --cov-report=html
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        VERSION=`git describe --abbrev=0 --tags`
        VERSION_BITS=(${VERSION//./ })
        VNUM1=${VERSION_BITS[0]}
        VNUM2=${VERSION_BITS[1]}
        VNUM3=${VERSION_BITS[2]}
        VNUM3=$((VNUM3+1))
        NEW_TAG="$VNUM1.$VNUM2.$VNUM3"
        git tag $NEW_TAG        
        python setup.py register sdist upload
